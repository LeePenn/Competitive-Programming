```cpp
// {0~n-1}的所有子集：位向量法
// Rujia Liu
#include<cstdio>
using namespace std;

void print_subset(int n, int* B, int cur) {
  if(cur == n) {
    for(int i = 0; i < cur; i++)
      if(B[i]) printf("%d ", i); // 打印当前集合
    printf("\n");
    return;
  }
  B[cur] = 1; // 选第cur个元素
  print_subset(n, B, cur+1);
  B[cur] = 0; // 不选第cur个元素
  print_subset(n, B, cur+1);
}

int B[10];
int main() {
  int n;
  scanf("%d", &n);
  print_subset(5, B, 0);
  return 0;
}
```


```cpp
// Joker
#include <bits/stdc++.h>
using namespace std;

const int N = 10;
int n, a[N], b[N];

void dfs(int cur) {
  if (cur == n + 1) {
    for (int i = 1; i <= n; i++) {
      if (b[i]) printf("%d ", a[i]);
    }
    printf("\n");
    return;
  }
  
  b[cur] = 1; // 选
  dfs(cur + 1);
  b[cur] = 0; // 不选
  dfs(cur + 1);;
}


int main() {
  //std::ios::sync_with_stdio(false);
  //std::cin.tie(0);
  
  while (scanf("%d", &n) == 1 && n) {
    for (int i = 1; i <= n; i++) scanf("%d", &a[i]);
    memset(b, 0, sizeof(b));
    dfs(1);
  }
  
  
  return 0;
}
```